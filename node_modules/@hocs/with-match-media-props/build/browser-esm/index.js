function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

import { createElement, Component } from 'react';
import getDisplayName from 'react-display-name';
import json2mq from 'json2mq';
var isMatchMediaSupported = typeof global.matchMedia === 'function';

var queryToMql = function queryToMql(query) {
  return global.matchMedia(json2mq(query));
};

var createMediaMatcher = function createMediaMatcher(query) {
  var mql = queryToMql(query);
  return {
    matches: mql.matches,
    subscribe: function subscribe(handler) {
      mql.addListener(handler);
      return function () {
        return mql.removeListener(handler);
      };
    }
  };
};

var withMatchMediaProps = function withMatchMediaProps() {
  var propsQieries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (Target) {
    if (!isMatchMediaSupported) {
      return Target;
    }

    var WithMatchMediaProps =
    /*#__PURE__*/
    function (_Component) {
      _inherits(WithMatchMediaProps, _Component);

      function WithMatchMediaProps(props, context) {
        var _this;

        _classCallCheck(this, WithMatchMediaProps);

        _this = _possibleConstructorReturn(this, _getPrototypeOf(WithMatchMediaProps).call(this, props, context));
        _this.propsMatchers = Object.keys(propsQieries).map(function (prop) {
          return _objectSpread({
            prop: prop
          }, createMediaMatcher(propsQieries[prop]));
        });
        _this.state = _this.propsMatchers.reduce(function (result, propMatcher) {
          return _objectSpread({}, result, _defineProperty({}, propMatcher.prop, propMatcher.matches));
        }, {});
        return _this;
      }

      _createClass(WithMatchMediaProps, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this2 = this;

          this.unsubscribers = this.propsMatchers.map(function (propMatcher) {
            return propMatcher.subscribe(function (e) {
              _this2.setState(_defineProperty({}, propMatcher.prop, e.matches));
            });
          });
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.unsubscribers.forEach(function (unsubscribe) {
            return unsubscribe();
          });
        }
      }, {
        key: "render",
        value: function render() {
          return createElement(Target, _objectSpread({}, this.props, this.state));
        }
      }]);

      return WithMatchMediaProps;
    }(Component);

    if (process.env.NODE_ENV !== 'production') {
      WithMatchMediaProps.displayName = "withMatchMediaProps(".concat(getDisplayName(Target), ")");
    }

    return WithMatchMediaProps;
  };
};

export default withMatchMediaProps;